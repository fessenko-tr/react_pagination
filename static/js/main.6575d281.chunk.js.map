{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pageQnty","Math","round","className","cn","disabled","href","onClick","map","active","items","App","useState","setCurrentPage","itemsPerPage","setItemsPerPage","itemsCountTo","length","itemsCountFrom","value","id","onChange","e","target","htmlFor","page","slice","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAOtC,IALFC,EAKC,EALDA,MACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,aAGIC,EAAWJ,EAAQC,IAAY,EACjCD,EAAQC,EACRI,KAAKC,MAAMN,EAAQC,EAAU,GAEjC,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CACzBC,SAA0B,IAAhBP,IAFd,SAKE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBR,EAAoB,OAAS,QAC5CS,QAAS,WACHT,EAAc,EAAI,GACpBC,EAAaD,EAAc,IAPjC,oBAcDT,EAAW,EAAGW,GAAUQ,KAAI,SAAAf,GAAC,OAC5B,oBACEU,UAAWC,IAAG,YAAa,CACzBK,OAAQhB,IAAMK,IAFlB,SAME,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAI,WAAMb,GACVc,QAAS,kBAAMR,EAAaN,IAJ9B,SAMGA,KAREA,MAYT,oBACEU,UAAWC,IAAG,YAAa,CACzBC,SAAUP,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeR,IAAgBE,EAAW,OAAS,QACnDO,QAAS,WACHT,EAAc,GAAKE,GACrBD,EAAaD,EAAc,IAPjC,wBC7DFY,EAAQrB,EAAW,EAAG,IAAImB,KAAI,SAAAf,GAAC,OAAK,oBAAY,UAAQ,OAApB,wBAAoCA,IAA3BA,MAEtCkB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOd,EAAP,KAAoBe,EAApB,KACA,EAAwCD,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAEMC,EAAelB,EAAcgB,EAAeJ,EAAMO,OACpDP,EAAMO,OACNnB,EAAcgB,EAEZI,EAAiBpB,EAAcgB,EAAeJ,EAAMO,QACrDnB,EAAc,GAAKgB,EAAe,EACnCE,EAAeF,EAAe,EAOlC,OACE,sBAAKX,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,mBACiCoB,EADjC,cACqDF,EADrD,eACwEN,EAAMO,OAD9E,OAIA,sBAAKd,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACEgB,MAAOL,EACP,UAAQ,kBACRM,GAAG,kBACHjB,UAAU,eACVkB,SApBmB,SAACC,GAC5BP,GAAiBO,EAAEC,OAAOJ,OAC1BN,EAAe,IAaT,UAOE,wBAAQM,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBrB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEP,MAAOc,EAAMO,OACbpB,QAASiB,EACThB,YAAaA,EACbC,aAAc,SAAC0B,GAAD,OAAUZ,EAAeY,MAEzC,6BACGf,EAAMgB,MAAMR,EAAiB,EAAGF,SCzDzCW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6575d281.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = (\n  {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  },\n) => {\n  const pageQnty = total % perPage === 0\n    ? total / perPage\n    : Math.round(total / perPage + 1);\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 ? 'true' : 'false'}\n          onClick={() => {\n            if (currentPage - 1 > 0) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n      {getNumbers(1, pageQnty).map(n => (\n        <li\n          className={cn('page-item', {\n            active: n === currentPage,\n          })}\n          key={n}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${n}`}\n            onClick={() => onPageChange(n)}\n          >\n            {n}\n          </a>\n        </li>\n      ))}\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === pageQnty,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pageQnty ? 'true' : 'false'}\n          onClick={() => {\n            if (currentPage + 1 <= pageQnty) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42).map(n => (<li key={n} data-cy=\"item\">{`Item ${n}`}</li>));\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n\n  const itemsCountTo = currentPage * itemsPerPage > items.length\n    ? items.length\n    : currentPage * itemsPerPage;\n\n  const itemsCountFrom = currentPage * itemsPerPage > items.length\n    ? (currentPage - 1) * itemsPerPage + 1\n    : itemsCountTo - itemsPerPage + 1;\n\n  const handleItemQntyChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+e.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${itemsCountFrom} - ${itemsCountTo} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            value={itemsPerPage}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleItemQntyChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={(page) => setCurrentPage(page)}\n      />\n      <ul>\n        {items.slice(itemsCountFrom - 1, itemsCountTo)}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}